import openAI, { gpt4oMini, textEmbedding3Small } from "genkitx-openai";
import { auth0 } from "@auth0/ai-genkit";
import { Genkit, genkit } from "genkit";
import { Document } from "genkit/retriever";
import devLocalVectorstore, {
  devLocalIndexerRef,
  devLocalRetrieverRef,
} from "@genkit-ai/dev-local-vectorstore";
import { logger } from "genkit/logging";

export const indexName = "documents";

export const documentsRetriever = devLocalRetrieverRef(indexName);

export const documentsIndexer = devLocalIndexerRef(indexName);

export function initializeGenkit() {
  logger.setLogLevel("error");

  return genkit({
    plugins: [
      openAI(),
      auth0(),
      devLocalVectorstore([
        {
          indexName,
          embedder: textEmbedding3Small,
        },
      ]),
    ],
  });
}

/**
 * Executes a query using a language model and a given context.
 *
 * @param query - The query string to be answered.
 * @param docs - An array of Document objects to be used as context for the query.
 * @returns A promise that resolves to the output string generated by the language model.
 */
export async function executeQuery(
  ai: Genkit,
  query: string,
  docs: Document[]
) {
  const { text } = await ai.generate({
    model: gpt4oMini,
    system:
      "Use only the context provided to answer the question. If you don't know, do not make up an answer.",
    prompt: query,
    docs,
  });

  return text;
}
